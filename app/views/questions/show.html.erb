<h1><%= @question.title %></h1>
<p><%= @question.body %></p>

<p>Tags: <%= @question.tags.map(&:name).join(', ') %>

<p><strong>Category:</strong> <%= @question.category&.name %></p>
<p><strong>Author:</strong> <%= @question.user&.full_name %></p>

<%= image_tag @question.image.url(:medium) if @question.image.present? %>

<!-- Reddit style voting UI -->

<%= question_voter @question, @vote %>

<!-- Reddit style voting UI -->
<div class="like_button">
  <%= render "likes/like", like: @like %>
</div>

<% if user_signed_in? %>
  <% if can? :edit, @question %>
    <%= link_to 'Edit', edit_question_path(@question) %>
  <% end %>

  <%# when you use `method: :delete`. Rails will use Javascript to mimick a
      delete request to the server %>

  <%# can? is a helper method that is available in the controller and views.
      This method came from the `cancancan` gem and it uses the `ability.rb`
      file to know the permissions. %>
  <% if can? :destroy, @question %>
    <%= link_to 'Delete', question_path(@question),
                          method: :delete,
                          data: { confirm: 'Are you sure?' } %>
  <% end %>
<% end %>

<h2>Answers</h2>

<% if user_signed_in? %>
  <%= render 'answers/form', answer: @answer %>
<% end %>

<div id="answers">
  <%# when calling render to render any template, we can pass
  it key/value arguments where the key will be a local variable
  inside the partial. (e.g. answers becomes a local variable of the
  partial answers/answers with the value of @answers) %>
  <%= render 'answers/answers', answers: @answers %>
</div>
