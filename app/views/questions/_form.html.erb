<%# the `form_for` helper method expect you to give it an ActiveRecord object as
    its first argument. If the object is not persisted (Question.new) then the
    form will use the default URL to the create action in the associated
    controller for its `action` attribute. In this case, the `action` will be
    the url for the `create` action to `questions` controller which is
    `questions_path` %>

<%# When you pass a persisted object to `form_for` then it will use the url to
    the update action which is the same url for the show action
    (question_path(@question)) and it will use PATCH for the verb by using a
    technique of having a hidden field within the form with name `_method` and
    value `PATCH`. Also, all the fields will be prepopulated with data from
    the database. Also, note that the `submit` button will have a different
    text in here which will be `update question` %>

<%= simple_form_for @question do |f| %>
  <%# simple_form detects the type of the input based on the field's database
      column type: string -> text field
                   text -> textarea
                   integer -> number field
      simple_form will add a star near the label if there is presence validator
      of the field. If you don't like that you can add `required: false`  %>
  <%= f.input :title, required: false %>
  <%= f.input :body %>
  <%= f.association :tags, input_html: { multiple: true, class: 'chosen-select' }  %>
  <%= f.association :category,
                   include_blank: true,
                   prompt: 'Choose a category!' %>

  <%= f.submit class: 'btn btn-primary' %>
<% end %>
